<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iaitao</title>
  
  <subtitle>个人博客</subtitle>
  <link href="/aitao/atom.xml" rel="self"/>
  
  <link href="https://upholdjx.github.io/aitao/"/>
  <updated>2018-11-05T10:02:05.976Z</updated>
  <id>https://upholdjx.github.io/aitao/</id>
  
  <author>
    <name>Jianxin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React初体验</title>
    <link href="https://upholdjx.github.io/aitao/2018/11/05/React%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>https://upholdjx.github.io/aitao/2018/11/05/React初体验/</id>
    <published>2018-11-05T01:16:27.000Z</published>
    <updated>2018-11-05T10:02:05.976Z</updated>
    
    <content type="html"><![CDATA[<p>React是一个JavaScript库,可以在浏览器运行，也可以在服务器运行,初次使用可以部署到本地测试，也可以直接使用<a href="https://codepen.io/anon/pen/VVYpJW?editors=1010" target="_blank" rel="noopener">codepen</a>;</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://github.com/facebook/react/" target="_blank" rel="noopener">官方git地址</a><br>1、拷贝库到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:facebook/react.git</span><br></pre></td></tr></table></figure><p>当然没有git可以直接下载压缩包解压到本地即可，关于git安装可以看看这篇：</p><h3 id="模版"><a href="#模版" class="headerlink" title="模版"></a>模版</h3><p>React 独有的 JSX 语法，跟 JavaScript 不兼容。凡是使用 JSX 的地方，都要加上 type=”text/babel”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/babel&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><h3 id="ReactDOM-render"><a href="#ReactDOM-render" class="headerlink" title="ReactDOM.render()"></a>ReactDOM.render()</h3><p>ReactDOM.render 是 React 的最基本方法，用于将模板转为 HTML 语言，并插入指定的 DOM 节点。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;demo&quot;&gt;&lt;/div&gt;</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;h1&gt;你好，陌生人！&lt;/h1&gt;</span><br><span class="line">  document.getElementById(&apos;demo&apos;);</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><h2 id="JSX-语法"><a href="#JSX-语法" class="headerlink" title="JSX 语法"></a>JSX 语法</h2><p>允许 HTML 与 JavaScript 的混写<br>遇到 HTML 标签（以 &lt; 开头），就用 HTML 规则解析；遇到代码块（以 { 开头），就用 JavaScript 规则解析。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;root&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">var arr = [&apos;java&apos;,&apos;php&apos;,&apos;react&apos;];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">&#123;</span><br><span class="line">  arr.map(function(value)&#123;</span><br><span class="line">  return &lt;div&gt;我喜欢&#123;value&#125;&lt;/div&gt;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">  &lt;/div&gt;,  //注意这儿有个逗号，每次分段都要有逗号分割</span><br><span class="line">  document.getElementById(&apos;root&apos;)   //注意这儿没有逗号</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">当直接使用数组变量时就会将所有的变量顺序展示</span><br><span class="line">&lt;div&gt;我喜欢&#123;arr&#125;&lt;/div&gt;</span><br><span class="line">--&gt;我喜欢,javaphpreact</span><br><span class="line">也可以使用表达式 例如</span><br><span class="line">var element = (</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&#123;</span><br><span class="line">  arr.map(function(value)&#123;</span><br><span class="line">  return &lt;div&gt;我喜欢&#123;value&#125;&lt;/div&gt;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">);</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  element,</span><br><span class="line">  document.getElementById(&apos;root&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><p>React 允许将代码封装成组件（component），然后像插入普通 HTML 标签一样，在网页中插入这个组件。React.createClass 方法就用于生成一个组件类<br>注意，组件类的第一个字母必须大写，否则会报错，比如HelloMessage不能写成helloMessage。另外，组件类只能包含一个顶层标签，否则也会报错.</p><p>使用JavaScript函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function Demo(props) &#123;</span><br><span class="line">return &lt;h1&gt;你好,&#123;props.name&#125;&lt;/h1&gt;;</span><br><span class="line">&#125;</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Demo name=&quot;zhang&quot;/&gt;,</span><br><span class="line">  document.getElementById(&apos;root&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>使用<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes" target="_blank" rel="noopener">ES6 class</a>来定义一个组件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">class Demo extends React.Component &#123;</span><br><span class="line">render() &#123;</span><br><span class="line">return &lt;h1&gt;Hello, &#123;this.props.name&#125;&lt;/h1&gt;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Demo name=&quot;陌生人！&quot;/&gt;,</span><br><span class="line">  document.getElementById(&apos;root&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>写法上有个地方需要注意<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">return &lt;h1&gt;Hello, &#123;this.props.name&#125;&lt;/h1&gt;;</span><br><span class="line">这个地方可以这样写</span><br><span class="line">return &lt;h1&gt;</span><br><span class="line">Hello, &#123;this.props.name&#125;</span><br><span class="line">&lt;/h1&gt;;</span><br><span class="line">但不可以这样写</span><br><span class="line">return </span><br><span class="line">&lt;h1&gt;</span><br><span class="line">Hello, &#123;this.props.name&#125;</span><br><span class="line">&lt;/h1&gt;;</span><br><span class="line">并且可以这样写</span><br><span class="line">return &lt;div&gt;</span><br><span class="line">&lt;h1&gt;Hello, &#123;this.props.name&#125;&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;你的笑像一条恶犬，撞乱了我的心弦！&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;;</span><br><span class="line">但不可以这样写</span><br><span class="line">return &lt;div&gt;</span><br><span class="line">&lt;h1&gt;Hello, &#123;this.props.name&#125;&lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;p&gt;你的笑像一条恶犬，撞乱了我的心弦！&lt;/p&gt;;</span><br></pre></td></tr></table></figure></p><h3 id="组件组合"><a href="#组件组合" class="headerlink" title="组件组合"></a>组件组合</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">class Welcome extends React.Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return &lt;button&gt;Hello, &#123;this.props.name&#125;&lt;/button&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Demo extends React.Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return &lt;div&gt;</span><br><span class="line">      &lt;Welcome name=&quot;I&quot; /&gt;,</span><br><span class="line">      &lt;Welcome name=&quot;Love&quot; /&gt;,</span><br><span class="line">      &lt;Welcome name=&quot;You&quot; /&gt;,</span><br><span class="line">      &lt;/div&gt;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Demo /&gt;,</span><br><span class="line">  document.getElementById(&apos;root&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>所有的React组件必须像纯函数那样使用它们的props</p><h3 id="真实dom节点的获取"><a href="#真实dom节点的获取" class="headerlink" title="真实dom节点的获取"></a>真实dom节点的获取</h3><p>组件并不是真实的 DOM 节点，而是存在于内存之中的一种数据结构，叫做虚拟 DOM （virtual DOM）。只有当它插入文档以后，才会变成真实的 DOM 。根据 React 的设计，所有的 DOM 变动，都先在虚拟 DOM 上发生，然后再将实际发生变动的部分，反映在真实 DOM上，这种算法叫做 DOM diff ，它可以极大提高网页的性能表现。</p><p>但是，有时需要从组件获取真实 DOM 的节点，这时就要用到 ref 属性。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var MyComponent = React.createClass(&#123;</span><br><span class="line">  handleClick: function() &#123;</span><br><span class="line">    this.refs.myTextInput.focus();</span><br><span class="line">  &#125;,</span><br><span class="line">  render: function() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; ref=&quot;myTextInput&quot; /&gt;</span><br><span class="line">        &lt;input type=&quot;button&quot; value=&quot;Focus the text input&quot; onClick=&#123;this.handleClick&#125; /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;MyComponent /&gt;,</span><br><span class="line">  document.getElementById(&apos;example&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><h3 id="state"><a href="#state" class="headerlink" title="state"></a>state</h3><p>React 的一大创新，就是将组件看成是一个状态机，一开始有一个初始状态，然后用户互动，导致状态变化，从而触发重新渲染 UI<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">var LikeButton = React.createClass(&#123;</span><br><span class="line">  getInitialState: function() &#123;</span><br><span class="line">    return &#123;liked: false&#125;;</span><br><span class="line">  &#125;, //定义初始状态，也就是一个对象，这个对象可以通过 this.state 属性读取。</span><br><span class="line">  handleClick: function(event) &#123;</span><br><span class="line">    this.setState(&#123;liked: !this.state.liked&#125;);</span><br><span class="line">  &#125;, //当用户点击组件，导致状态变化，this.setState 方法就修改状态值，每次修改以后，自动调用 this.render 方法，再次渲染组件</span><br><span class="line">  render: function() &#123;</span><br><span class="line">    var text = this.state.liked ? &apos;like&apos; : &apos;haven\&apos;t liked&apos;;</span><br><span class="line">    return (</span><br><span class="line">      &lt;p onClick=&#123;this.handleClick&#125;&gt;</span><br><span class="line">        You &#123;text&#125; this. Click to toggle.</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;LikeButton /&gt;,</span><br><span class="line">  document.getElementById(&apos;example&apos;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">this.props 表示那些一旦定义，就不再改变的特性，而 this.state 是会随着用户互动而产生变化的特性。</span><br></pre></td></tr></table></figure></p><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><p>用户在表单填入的内容，属于用户跟组件的互动，所以不能用 this.props 读取<br>以下为非受控表单<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">class NameForm extends React.Component &#123;</span><br><span class="line">  constructor(props)&#123;</span><br><span class="line">  super(props);</span><br><span class="line">  this.state = &#123;name: &apos;&apos;,hobby: &apos;&apos;,introduce:&apos;&apos;,book: &apos;&apos;&#125;;</span><br><span class="line">  this.handleChangeName = this.handleChangeName.bind(this);</span><br><span class="line">    this.handleChangeHobby = this.handleChangeHobby.bind(this);</span><br><span class="line">    this.handleChangeIntroduce = this.handleChangeIntroduce.bind(this);</span><br><span class="line">    this.handleChangeBook = this.handleChangeBook.bind(this);</span><br><span class="line">  this.handleSubmit = this.handleSubmit.bind(this);</span><br><span class="line">  &#125;</span><br><span class="line">  handleChangeName(event) &#123;</span><br><span class="line">  this.setState(&#123;</span><br><span class="line">  name:event.target.value</span><br><span class="line">  &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  handleChangeHobby(event) &#123;</span><br><span class="line">this.setState(&#123;</span><br><span class="line">hobby:event.target.value</span><br><span class="line">&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  handleChangeIntroduce(event) &#123;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      introduce: event.target.value</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  handleChangeBook(event) &#123;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      book: event.target.value</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  handleSubmit(event) &#123;</span><br><span class="line">  console.log(this.state);</span><br><span class="line">  event.preventDefault();</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">  return (</span><br><span class="line">      &lt;form onSubmit=&#123;this.handleSubmit&#125;&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          姓名:</span><br><span class="line">          &lt;input type=&quot;text&quot; value=&#123;this.state.name&#125; onChange=&#123;this.handleChangeName&#125; /&gt;</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          爱好:</span><br><span class="line">          &lt;input type=&quot;text&quot; value=&#123;this.state.hobby&#125; onChange=&#123;this.handleChangeHobby&#125; /&gt;</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          个人简介:</span><br><span class="line">      &lt;textarea value=&#123;this.state.introduce&#125; onChange=&#123;this.handleChangeIntroduce&#125; &gt;&lt;/textarea&gt;</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          喜欢的书</span><br><span class="line">          &lt;select value=&#123;this.state.value&#125; onChange=&#123;this.handleChangeBook&#125;&gt;</span><br><span class="line">            &lt;option value=&quot;1&quot;&gt;Java&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;2&quot;&gt;PHP&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;3&quot;&gt;JavaScript&lt;/option&gt;</span><br><span class="line">            &lt;option value=&quot;4&quot;&gt;Css&lt;/option&gt;</span><br><span class="line">          &lt;/select&gt;</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; value=&quot;确定&quot; /&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">  )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;NameForm /&gt;,</span><br><span class="line">  document.getElementById(&apos;root&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><h3 id="非受控组件"><a href="#非受控组件" class="headerlink" title="非受控组件"></a>非受控组件</h3><p>由于非受控组件将真实数据保存在 DOM 中，因此在使用非受控组件时，更容易同时集成 React 和非 React 代码。如果你想快速而随性，这样做可以减小代码量。否则，你应该使用受控组件。</p><p>拉个官网的栗子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">class NameForm extends React.Component &#123;</span><br><span class="line">  constructor(props) &#123;</span><br><span class="line">    super(props);</span><br><span class="line">    this.handleSubmit = this.handleSubmit.bind(this);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleSubmit(event) &#123;</span><br><span class="line">    alert(&apos;A name was submitted: &apos; + this.input.value);</span><br><span class="line">    event.preventDefault();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;form onSubmit=&#123;this.handleSubmit&#125;&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          Name:</span><br><span class="line">          &lt;input type=&quot;text&quot; ref=&#123;(input) =&gt; this.input = input&#125; /&gt;</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="组件的生命周期"><a href="#组件的生命周期" class="headerlink" title="组件的生命周期"></a>组件的生命周期</h2><p>组件的<a href="https://reactjs.org/docs/refs-and-the-dom.html#component-lifecycle" target="_blank" rel="noopener">生命周期</a>分成三个状态：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Mounting：已插入真实 DOM</span><br><span class="line">Updating：正在被重新渲染</span><br><span class="line">Unmounting：已移出真实 DOM</span><br></pre></td></tr></table></figure></p><p>React 为每个状态都提供了两种处理函数，will 函数在进入状态之前调用，did 函数在进入状态之后调用，三种状态共计五种处理函数。</p><p>React 还提供两种特殊状态的处理函数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">componentWillReceiveProps(object nextProps)：已加载组件收到新的参数时调用</span><br><span class="line">shouldComponentUpdate(object nextProps, object nextState)：组件判断是否重新渲染时调用</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">var Hello = React.createClass(&#123;</span><br><span class="line">  getInitialState: function () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      opacity: 1.0</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  componentDidMount: function () &#123;</span><br><span class="line">    this.timer = setInterval(function () &#123;</span><br><span class="line">      var opacity = this.state.opacity;</span><br><span class="line">      opacity -= .05;</span><br><span class="line">      if (opacity &lt; 0.1) &#123;</span><br><span class="line">        opacity = 1.0;</span><br><span class="line">      &#125;</span><br><span class="line">      this.setState(&#123;</span><br><span class="line">        opacity: opacity</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;.bind(this), 100);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  render: function () &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div style=&#123;&#123;opacity: this.state.opacity&#125;&#125;&gt;</span><br><span class="line">        Hello &#123;this.props.name&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Hello name=&quot;world&quot;/&gt;,</span><br><span class="line">  document.body</span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;React是一个JavaScript库,可以在浏览器运行，也可以在服务器运行,初次使用可以部署到本地测试，也可以直接使用&lt;a href=&quot;https://codepen.io/anon/pen/VVYpJW?editors=1010&quot; target=&quot;_blank&quot; rel
      
    
    </summary>
    
      <category term="前端框架" scheme="https://upholdjx.github.io/aitao/categories/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="JavaScript" scheme="https://upholdjx.github.io/aitao/tags/JavaScript/"/>
    
      <category term="React" scheme="https://upholdjx.github.io/aitao/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>layx初体验</title>
    <link href="https://upholdjx.github.io/aitao/2018/11/03/layx%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>https://upholdjx.github.io/aitao/2018/11/03/layx初体验/</id>
    <published>2018-11-03T03:47:25.000Z</published>
    <updated>2018-11-03T09:26:03.027Z</updated>
    
    <content type="html"><![CDATA[<p>Layx 新一代Web弹窗组件，纯原生Javascript实现，不依赖任何第三方框架<br><a href="https://github.com/MonkSoul/Layx/" target="_blank" rel="noopener">git 地址：</a></p><h3 id="初次使用"><a href="#初次使用" class="headerlink" title="初次使用"></a>初次使用</h3><p>第一步：引入 layx.css / layx.min.css</p><p><link href="layx.min.css" rel="stylesheet" type="text/css"><br>第二步：引入 layx.js / layx.min.js</p><p><script src="layx.min.js" type="text/javascript"></script><br>第三步：打开一个窗口试试<br>layx.html(‘str’,’字符串文本’,’Hello Layx!’);</p><h3 id="消息提示"><a href="#消息提示" class="headerlink" title="消息提示"></a>消息提示</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">layx.msg(<span class="string">'2419 iaitao'</span>,&#123;<span class="attr">dialogIcon</span>:<span class="string">'success'</span>&#125;);<span class="comment">//成功提示</span></span><br></pre></td></tr></table></figure><p>dialogIcon: 提示图标相关如下<br>success：成功图标<br>warn：警告图标<br>error：错误图标<br>help: 帮助图标</p><h3 id="窗口皮肤"><a href="#窗口皮肤" class="headerlink" title="窗口皮肤"></a>窗口皮肤</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">layx.msg(</span><br><span class="line"><span class="string">'2419 iaitao'</span>,</span><br><span class="line">&#123;</span><br><span class="line">dialogIcon:<span class="string">'success'</span>,</span><br><span class="line">skin:<span class="string">'cloud'</span></span><br><span class="line">&#125;);<span class="comment">//成功提示</span></span><br><span class="line">参数</span><br><span class="line"><span class="keyword">default</span>     <span class="comment">// 默认有边框</span></span><br><span class="line">cloud       <span class="comment">// 白色</span></span><br><span class="line">turquoise  <span class="comment">//青绿色</span></span><br><span class="line">river     <span class="comment">//蓝色</span></span><br><span class="line">asphalt  <span class="comment">// 沥青色</span></span><br></pre></td></tr></table></figure><h3 id="提示窗口"><a href="#提示窗口" class="headerlink" title="提示窗口"></a>提示窗口</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layx.alert(<span class="string">'操作提示'</span>,<span class="string">'2419 i aitao！'</span>);<span class="comment">//提示窗口</span></span><br><span class="line">layx.alert(<span class="string">'操作提示'</span>,<span class="string">'2419 i aitao！'</span>,<span class="literal">null</span>,&#123;<span class="attr">dialogIcon</span>:<span class="string">'success'</span>&#125;);<span class="comment">//提示窗口 添加提示图标</span></span><br></pre></td></tr></table></figure><h3 id="打开网页"><a href="#打开网页" class="headerlink" title="打开网页"></a>打开网页</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">layx.iframe(<span class="string">'localsite'</span>,<span class="string">'网页打开测试'</span>,<span class="string">'https://www.baidu.com'</span>);</span><br></pre></td></tr></table></figure><h3 id="添加提示"><a href="#添加提示" class="headerlink" title="添加提示"></a>添加提示</h3><p>方向 ： top 、right、bottom、left<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">id</span>=<span class="string">"tip-right"</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">layx.tip(<span class="string">'只是测试哦.'</span>,<span class="built_in">document</span>.getElementById(<span class="string">'tip-right'</span>),<span class="string">'right'</span>);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="询问窗口"><a href="#询问窗口" class="headerlink" title="询问窗口"></a>询问窗口</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">layx.confirm(<span class="string">'选择'</span>,<span class="string">'你会选择爱情而放弃事业吗？'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">id</span>)</span>&#123;</span><br><span class="line">    layx.msg(<span class="string">'你的选择是正确的'</span>,&#123;<span class="attr">dialogIcon</span>:<span class="string">'success'</span>&#125;);<span class="comment">//成功提示</span></span><br><span class="line">    layx.destroy(id);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">带图标</span><br><span class="line">layx.confirm(<span class="string">'选择'</span>,<span class="string">'你会选择爱情而放弃事业吗？'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">id</span>)</span>&#123;</span><br><span class="line">    layx.msg(<span class="string">'你的选择是正确的'</span>,&#123;<span class="attr">dialogIcon</span>:<span class="string">'success'</span>&#125;);<span class="comment">//成功提示</span></span><br><span class="line">    layx.destroy(id);</span><br><span class="line">&#125;,&#123;<span class="attr">dialogIcon</span>:<span class="string">'success'</span>&#125;);</span><br><span class="line"></span><br><span class="line">双向选择</span><br><span class="line">layx.confirm(<span class="string">'选择'</span>,<span class="string">'你会选择爱情而放弃事业吗？'</span>,<span class="literal">null</span>,&#123;</span><br><span class="line">    buttons:[</span><br><span class="line">        &#123;</span><br><span class="line">            label:<span class="string">'是的'</span>,</span><br><span class="line">            callback:<span class="function"><span class="keyword">function</span>(<span class="params">id, button, event</span>)</span>&#123;</span><br><span class="line">                layx.msg(<span class="string">'你的选择是正确的,爱情价更高！'</span>,&#123;<span class="attr">dialogIcon</span>:<span class="string">'success'</span>&#125;);<span class="comment">//成功提示</span></span><br><span class="line">                layx.destroy(id);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            label:<span class="string">'不会'</span>,</span><br><span class="line">            callback:<span class="function"><span class="keyword">function</span>(<span class="params">id, button, event</span>)</span>&#123;</span><br><span class="line">                layx.msg(<span class="string">'你的选择是正确的,爱情不能盲目！'</span>,&#123;<span class="attr">dialogIcon</span>:<span class="string">'success'</span>&#125;);<span class="comment">//成功提示</span></span><br><span class="line">                layx.destroy(id);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;,&#123;<span class="attr">dialogIcon</span>:<span class="string">'success'</span>&#125;);</span><br></pre></td></tr></table></figure><h3 id="加载等待"><a href="#加载等待" class="headerlink" title="加载等待"></a>加载等待</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">layx.load(<span class="string">'loadId'</span>,<span class="string">'数据正在加载中，请稍后'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5 秒后自动关闭</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    layx.destroy(<span class="string">'loadId'</span>);</span><br><span class="line">&#125;,<span class="number">5000</span>);</span><br><span class="line"></span><br><span class="line">倒计时窗口</span><br><span class="line">layx.iframe(<span class="string">'settimeout'</span>,<span class="string">'打开一个倒计时关闭窗口'</span>,<span class="string">'https://www.baidu.com'</span>,&#123;</span><br><span class="line">    autodestroy:<span class="number">5000</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="打开窗口和窗口组"><a href="#打开窗口和窗口组" class="headerlink" title="打开窗口和窗口组"></a>打开窗口和窗口组</h3><p>初始化 窗口宽度：800 高度：600 minWidth：200  minHeight：200，宽度高度支持百分比显示，窗口位置 默认正中间</p><h4 id="窗口组"><a href="#窗口组" class="headerlink" title="窗口组"></a>窗口组</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">layx.group(<span class="string">'group'</span>,[</span><br><span class="line">    &#123;</span><br><span class="line">        id:<span class="string">'group1'</span>,</span><br><span class="line">        title:<span class="string">'文本窗口'</span>,</span><br><span class="line">        content:<span class="string">'Layx 新一代Web弹窗组件.'</span>,</span><br><span class="line">        bgColor:<span class="string">'#ccc'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id:<span class="string">'group2'</span>,</span><br><span class="line">        title:<span class="string">'网页窗口'</span>,</span><br><span class="line">        type:<span class="string">'url'</span>,</span><br><span class="line">        url:<span class="string">'./iframe.html'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        id:<span class="string">'taobao'</span>,</span><br><span class="line">        title:<span class="string">'百度官网'</span>,</span><br><span class="line">        type:<span class="string">'url'</span>,</span><br><span class="line">        url:<span class="string">'https://www.baidu.com'</span></span><br><span class="line">    &#125;</span><br><span class="line">],<span class="number">0</span>,</span><br><span class="line">&#123;</span><br><span class="line">width:<span class="number">600</span>,</span><br><span class="line">skin:<span class="string">'cloud'</span>,</span><br><span class="line">mergeTitle:<span class="literal">false</span>,</span><br><span class="line">    title:<span class="string">'你好呀，我是标题~'</span></span><br><span class="line">&#125;));</span><br><span class="line"><span class="number">0</span> 表示默认显示第一个窗口 下标从<span class="number">0</span>开始</span><br><span class="line">bgColor 表示页面背景颜色</span><br><span class="line">如果需要显示标题就添加下面两个参数，不需要就不用加</span><br><span class="line">mergeTitle:<span class="literal">false</span>,</span><br><span class="line">title:<span class="string">'你好呀，我是标题~'</span></span><br></pre></td></tr></table></figure><h4 id="遮罩窗口"><a href="#遮罩窗口" class="headerlink" title="遮罩窗口"></a>遮罩窗口</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">layx.iframe(<span class="string">'shadow'</span>,<span class="string">'打开一个遮罩、阻隔窗口，点击窗口外试试'</span>,<span class="string">'http://www.baidu.com'</span>,&#123;</span><br><span class="line">    shadable:<span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line">shadable 透明度 取值<span class="number">0</span>~<span class="number">1</span> 浮点值 透明度依次递减</span><br><span class="line"></span><br><span class="line">点击空白地方关闭</span><br><span class="line">layx.iframe(<span class="string">'shadow-click'</span>,<span class="string">'点击阻隔空白地方关闭窗口'</span>,<span class="string">'http://www.baidu.com'</span>,&#123;</span><br><span class="line">    shadable:<span class="number">0.2</span>,</span><br><span class="line">    control:<span class="literal">true</span>,</span><br><span class="line">    border:<span class="literal">false</span>,</span><br><span class="line">    shadow:<span class="literal">false</span>,</span><br><span class="line">    shadeDestroy:<span class="literal">true</span>   <span class="comment">// 点击空白地方关闭</span></span><br><span class="line">&#125;);</span><br><span class="line">control 设置 <span class="literal">false</span> 将不显示控制标题栏，同时窗口拖动功能失效，需手动调用关闭方法关闭窗口。</span><br><span class="line">border:<span class="literal">false</span> 表示无边框</span><br></pre></td></tr></table></figure><h3 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">layx.iframe(<span class="string">'radiu-style'</span>,<span class="string">'自定义外观，比如圆角'</span>,<span class="string">'./iframe.html'</span>,&#123;</span><br><span class="line">    style:layx.multiLine(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">/*</span></span><br><span class="line"><span class="comment">icon:false,</span></span><br><span class="line"><span class="comment">        #layx-radiu-style&#123;</span></span><br><span class="line"><span class="comment">            border-radius:4px;</span></span><br><span class="line"><span class="comment">            -webkit-border-radius:4px;</span></span><br><span class="line"><span class="comment">            -moz-border-radius:4px;</span></span><br><span class="line"><span class="comment">            -ms-border-radius:4px;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        #layx-radiu-style .layx-window-icon&#123;</span></span><br><span class="line"><span class="comment">            color:#f00;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span>&#125;)</span><br><span class="line">&#125;);</span><br><span class="line">icon 打开窗口的图标，可以去掉也可以自定义例如：</span><br><span class="line">icon:<span class="string">'&lt;img src="http://img.zcool.cn/community/019c2958a2b760a801219c77a9d27f.jpg" style="height:22px;display:block;" /&gt;'</span>,</span><br></pre></td></tr></table></figure><h3 id="关闭窗口"><a href="#关闭窗口" class="headerlink" title="关闭窗口"></a>关闭窗口</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parent.layx.destroy(id);   <span class="comment">// 方法一（推荐）</span></span><br><span class="line">top.layx.destroy(id);   <span class="comment">// 方法二</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Layx 新一代Web弹窗组件，纯原生Javascript实现，不依赖任何第三方框架&lt;br&gt;&lt;a href=&quot;https://github.com/MonkSoul/Layx/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;git 地址：&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="JavaScript" scheme="https://upholdjx.github.io/aitao/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://upholdjx.github.io/aitao/tags/JavaScript/"/>
    
      <category term="Layx" scheme="https://upholdjx.github.io/aitao/tags/Layx/"/>
    
  </entry>
  
  <entry>
    <title>thinkphp标签循环嵌套</title>
    <link href="https://upholdjx.github.io/aitao/2018/11/02/thinkphp%E6%A0%87%E7%AD%BE%E5%BE%AA%E7%8E%AF%E5%B5%8C%E5%A5%97/"/>
    <id>https://upholdjx.github.io/aitao/2018/11/02/thinkphp标签循环嵌套/</id>
    <published>2018-11-02T07:35:39.000Z</published>
    <updated>2018-11-02T07:36:16.704Z</updated>
    
    <content type="html"><![CDATA[<h3 id="thinkphp-volist-多重循环嵌套key"><a href="#thinkphp-volist-多重循环嵌套key" class="headerlink" title="thinkphp volist 多重循环嵌套key"></a>thinkphp volist 多重循环嵌套key</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;thinkphp-volist-多重循环嵌套key&quot;&gt;&lt;a href=&quot;#thinkphp-volist-多重循环嵌套key&quot; class=&quot;headerlink&quot; title=&quot;thinkphp volist 多重循环嵌套key&quot;&gt;&lt;/a&gt;thinkphp vo
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jquery对input的一些操作</title>
    <link href="https://upholdjx.github.io/aitao/2018/11/02/Jquery%E5%AF%B9input%E7%9A%84%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C/"/>
    <id>https://upholdjx.github.io/aitao/2018/11/02/Jquery对input的一些操作/</id>
    <published>2018-11-02T03:10:33.000Z</published>
    <updated>2018-11-02T03:43:16.174Z</updated>
    
    <content type="html"><![CDATA[<p>场景：对于选中，选择的一些操作，比如：勾选导出，获得全部选中的值等等</p><h3 id="获得全部选中的值"><a href="#获得全部选中的值" class="headerlink" title="获得全部选中的值"></a>获得全部选中的值</h3><p>html 部分代码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"ids[]"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>javascript 代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getAllValue</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> ids = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">$(<span class="string">"input[name^='ids']:checked"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">//找到所有被选中的值</span></span><br><span class="line"><span class="keyword">var</span> val = $(<span class="keyword">this</span>).val();</span><br><span class="line">ids[i] = val;</span><br><span class="line">i++;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> len = ids.length;</span><br><span class="line"><span class="keyword">if</span>(len === <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ids;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="勾选多项进行操作"><a href="#勾选多项进行操作" class="headerlink" title="勾选多项进行操作"></a>勾选多项进行操作</h3><p>$.getJSON 简介：JSON（JavaScript Object Notation）即JavaScript对象表示法，是一种轻量级的数据交换格式。它非常便于编程人员对数据的处理，也便于机器对数据的解析和生成，应用非常广泛。json文件可以保存为“test.json”这样的文件，json数据的一般格式如下（“{ }”中的为对象，“[ ]”中的为数组)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">operate</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> url = $(<span class="keyword">this</span>).attr(<span class="string">'url'</span>);<span class="comment">//获得操作使用的url地址</span></span><br><span class="line"><span class="keyword">var</span> ids = getAllValue();<span class="comment">//调用上列使用的方法</span></span><br><span class="line"><span class="keyword">if</span>(!ids)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">$.getJSON(url,&#123;<span class="string">'t'</span>:<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</span><br><span class="line"><span class="comment">//发送get请求 返回结构比如：['status'=&gt;1|0,'data'=&gt;[],'msg'=&gt;'ok']</span></span><br><span class="line"><span class="keyword">if</span>(d.status&gt;<span class="number">0</span>)&#123;</span><br><span class="line">alert(d.msg);<span class="comment">//成功信息</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">alert(d.msg);<span class="comment">//失败信息</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="反选操作"><a href="#反选操作" class="headerlink" title="反选操作"></a>反选操作</h3><p>html 示例<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"ids[]"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  ......</span><br><span class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>JavaScript 示例<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.reverse-select'</span>).on(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">//反选 class="reverse-select"</span></span><br><span class="line"><span class="keyword">var</span> is_check = $(<span class="keyword">this</span>).prop(<span class="string">'checked'</span>);</span><br><span class="line">$(<span class="keyword">this</span>).parents(<span class="string">'table'</span>).find(<span class="string">"input[name^='ids']"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//查找节点遍历 也可使用 $("table input[name^='ids']").each();</span></span><br><span class="line"><span class="keyword">var</span> has_check = $(<span class="keyword">this</span>).prop(<span class="string">'checked'</span>);</span><br><span class="line"><span class="keyword">if</span>(is_check &amp;&amp; !has_check)&#123;</span><br><span class="line">$(<span class="keyword">this</span>).prop(<span class="string">'checked'</span>,<span class="literal">true</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(has_check &amp;&amp; !is_check)&#123;</span><br><span class="line">$(<span class="keyword">this</span>).prop(<span class="string">'checked'</span>,<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;场景：对于选中，选择的一些操作，比如：勾选导出，获得全部选中的值等等&lt;/p&gt;
&lt;h3 id=&quot;获得全部选中的值&quot;&gt;&lt;a href=&quot;#获得全部选中的值&quot; class=&quot;headerlink&quot; title=&quot;获得全部选中的值&quot;&gt;&lt;/a&gt;获得全部选中的值&lt;/h3&gt;&lt;p&gt;html
      
    
    </summary>
    
      <category term="JavaScript" scheme="https://upholdjx.github.io/aitao/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://upholdjx.github.io/aitao/tags/JavaScript/"/>
    
      <category term="Jquery" scheme="https://upholdjx.github.io/aitao/tags/Jquery/"/>
    
  </entry>
  
  <entry>
    <title>PHP常用字符串总结</title>
    <link href="https://upholdjx.github.io/aitao/2018/11/02/PHP%E5%B8%B8%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%80%BB%E7%BB%93/"/>
    <id>https://upholdjx.github.io/aitao/2018/11/02/PHP常用字符串总结/</id>
    <published>2018-11-02T01:16:32.000Z</published>
    <updated>2018-11-02T03:09:45.234Z</updated>
    
    <content type="html"><![CDATA[<p>PHP 是 “PHP Hypertext Preprocessor” 的首字母缩略词<br>PHP 是一种被广泛使用的开源脚本语言<br>PHP 脚本在服务器上执行<br>PHP 没有成本，可供免费下载和使用</p><p>PHP 相关主流框架：<a href="https://www.kancloud.cn/manual/thinkphp5/118003" target="_blank" rel="noopener">thinkphp5.0 看云文档</a>  <a href="https://www.golaravel.com/" target="_blank" rel="noopener">laravel 中文社区</a>  <a href="https://www.kancloud.cn/manual/thinkphp5/118003" target="_blank" rel="noopener">Phalcon </a>  <a href="https://symfony.com/" target="_blank" rel="noopener">Symfony</a> 排列不分先后。</p><blockquote><p>本文对框架不做讨论</p></blockquote><h2 id="常用字符串函数及使用"><a href="#常用字符串函数及使用" class="headerlink" title="常用字符串函数及使用"></a>常用字符串函数及使用</h2><h3 id="字符串大小写转换"><a href="#字符串大小写转换" class="headerlink" title="字符串大小写转换"></a>字符串大小写转换</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$str = <span class="string">'abc'</span>;</span><br><span class="line">$low_str = strtolower($str);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'转换为小写'</span>+$low_str;</span><br><span class="line">$uper_str = strtoupper($str);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'转换为大写'</span>+$uper_str;</span><br></pre></td></tr></table></figure><h3 id="替换字符串中的字串"><a href="#替换字符串中的字串" class="headerlink" title="替换字符串中的字串"></a>替换字符串中的字串</h3><p>mixed substr_replace ( mixed $string , mixed $replacement , mixed $start [, mixed $length ] )<br>substr_replace()<br>在字符串 string 的副本中将由 start 和可选的 length 参数限定的子字符串使用 replacement 进行替换。<br>注：<br>    如果 start 为正数，替换将从 string 的 start 位置开始。<br>    如果 start 为负数，替换将从 string 的倒数第 start 个位置开始。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">实列：</span><br><span class="line">$str = <span class="string">'abc'</span>;</span><br><span class="line">$new_str = substr_replace($str,<span class="string">'d'</span>,<span class="number">0</span>,$strlen($str));<span class="comment">//strlen() 函数计算字符串的长度</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'新的字串的值'</span>+$new_str;<span class="comment">//abcd</span></span><br></pre></td></tr></table></figure><p>More info: <a href="http://php.net/manual/zh/ref.strings.php" target="_blank" rel="noopener">php 文档</a></p><h3 id="字符串与数组之间的相互转化"><a href="#字符串与数组之间的相互转化" class="headerlink" title="字符串与数组之间的相互转化"></a>字符串与数组之间的相互转化</h3><p>array explode ( string $delimiter , string $string [, int $limit ] )<br>此函数返回由字符串组成的数组，每个元素都是 string 的一个子串，它们被字符串 delimiter 作为边界点分割出来。<br>string implode ( string $glue , array $pieces ) //$glue 默认为空字符串<br>string implode ( array $pieces )<br>implode() 可以接收两种参数顺序，但是 explode() 不行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">实例：</span><br><span class="line">$str = <span class="string">'a,b,c,d'</span>;<span class="comment">//逗号为分隔字符 相当于 $delimiter ='';</span></span><br><span class="line">$arr = explode(<span class="string">','</span>,$str);</span><br><span class="line">dump($arr);</span><br><span class="line">得到：</span><br><span class="line"><span class="keyword">array</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>] =&gt; string(<span class="number">1</span>) <span class="string">"a"</span></span><br><span class="line">  [<span class="number">1</span>] =&gt; string(<span class="number">1</span>) <span class="string">"b"</span></span><br><span class="line">  [<span class="number">2</span>] =&gt; string(<span class="number">1</span>) <span class="string">"c"</span></span><br><span class="line">  [<span class="number">3</span>] =&gt; string(<span class="number">1</span>) <span class="string">"d"</span></span><br><span class="line">&#125;</span><br><span class="line">$new_str = implode($arr);</span><br><span class="line"><span class="keyword">echo</span> $new_str;<span class="comment">//abcd</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;PHP 是 “PHP Hypertext Preprocessor” 的首字母缩略词&lt;br&gt;PHP 是一种被广泛使用的开源脚本语言&lt;br&gt;PHP 脚本在服务器上执行&lt;br&gt;PHP 没有成本，可供免费下载和使用&lt;/p&gt;
&lt;p&gt;PHP 相关主流框架：&lt;a href=&quot;https
      
    
    </summary>
    
      <category term="PHP" scheme="https://upholdjx.github.io/aitao/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://upholdjx.github.io/aitao/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP 常用字符串的比较</title>
    <link href="https://upholdjx.github.io/aitao/2018/11/01/hello-world/"/>
    <id>https://upholdjx.github.io/aitao/2018/11/01/hello-world/</id>
    <published>2018-11-01T06:54:29.000Z</published>
    <updated>2018-11-02T01:14:56.018Z</updated>
    
    <content type="html"><![CDATA[<p>PHP 是 “PHP Hypertext Preprocessor” 的首字母缩略词<br>PHP 是一种被广泛使用的开源脚本语言<br>PHP 脚本在服务器上执行<br>PHP 没有成本，可供免费下载和使用</p><p>PHP 相关主流框架：<a href="https://www.kancloud.cn/manual/thinkphp5/118003" target="_blank" rel="noopener">thinkphp5.0 看云文档</a>  <a href="https://www.golaravel.com/" target="_blank" rel="noopener">laravel 中文社区</a>  <a href="https://www.kancloud.cn/manual/thinkphp5/118003" target="_blank" rel="noopener">Phalcon </a>  <a href="https://symfony.com/" target="_blank" rel="noopener">Symfony</a> 排列不分先后。</p><blockquote><p>本文对框架不做讨论</p></blockquote><h2 id="常用字符串函数及使用"><a href="#常用字符串函数及使用" class="headerlink" title="常用字符串函数及使用"></a>常用字符串函数及使用</h2><h3 id="字符串大小写转换"><a href="#字符串大小写转换" class="headerlink" title="字符串大小写转换"></a>字符串大小写转换</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$str = <span class="string">'abc'</span>;</span><br><span class="line">$low_str = strtolower($str);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'转换为小写'</span>+$low_str;</span><br><span class="line">$uper_str = strtoupper($str);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'转换为大写'</span>+$uper_str;</span><br></pre></td></tr></table></figure><h3 id="替换字符串中的字串"><a href="#替换字符串中的字串" class="headerlink" title="替换字符串中的字串"></a>替换字符串中的字串</h3><p>mixed substr_replace ( mixed $string , mixed $replacement , mixed $start [, mixed $length ] )<br>substr_replace()<br>在字符串 string 的副本中将由 start 和可选的 length 参数限定的子字符串使用 replacement 进行替换。<br>注：<br>    如果 start 为正数，替换将从 string 的 start 位置开始。<br>    如果 start 为负数，替换将从 string 的倒数第 start 个位置开始。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">实列：</span><br><span class="line">$str = <span class="string">'abc'</span>;</span><br><span class="line">$new_str = substr_replace($str,<span class="string">'d'</span>,<span class="number">0</span>,$strlen($str));<span class="comment">//strlen() 函数计算字符串的长度</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'新的字串的值'</span>+$new_str;<span class="comment">//abcd</span></span><br></pre></td></tr></table></figure><p>More info: <a href="http://php.net/manual/zh/ref.strings.php" target="_blank" rel="noopener">php 文档</a></p><h3 id="字符串与数组之间的相互转化"><a href="#字符串与数组之间的相互转化" class="headerlink" title="字符串与数组之间的相互转化"></a>字符串与数组之间的相互转化</h3><p>array explode ( string $delimiter , string $string [, int $limit ] )<br>此函数返回由字符串组成的数组，每个元素都是 string 的一个子串，它们被字符串 delimiter 作为边界点分割出来。<br>string implode ( string $glue , array $pieces ) //$glue 默认为空字符串<br>string implode ( array $pieces )<br>implode() 可以接收两种参数顺序，但是 explode() 不行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">实例：</span><br><span class="line">$str = <span class="string">'a,b,c,d'</span>;<span class="comment">//逗号为分隔字符 相当于 $delimiter ='';</span></span><br><span class="line">$arr = explode(<span class="string">','</span>,$str);</span><br><span class="line">dump($arr);</span><br><span class="line">得到：</span><br><span class="line"><span class="keyword">array</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>] =&gt; string(<span class="number">1</span>) <span class="string">"a"</span></span><br><span class="line">  [<span class="number">1</span>] =&gt; string(<span class="number">1</span>) <span class="string">"b"</span></span><br><span class="line">  [<span class="number">2</span>] =&gt; string(<span class="number">1</span>) <span class="string">"c"</span></span><br><span class="line">  [<span class="number">3</span>] =&gt; string(<span class="number">1</span>) <span class="string">"d"</span></span><br><span class="line">&#125;</span><br><span class="line">$new_str = implode($arr);</span><br><span class="line"><span class="keyword">echo</span> $new_str;<span class="comment">//abcd</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;PHP 是 “PHP Hypertext Preprocessor” 的首字母缩略词&lt;br&gt;PHP 是一种被广泛使用的开源脚本语言&lt;br&gt;PHP 脚本在服务器上执行&lt;br&gt;PHP 没有成本，可供免费下载和使用&lt;/p&gt;
&lt;p&gt;PHP 相关主流框架：&lt;a href=&quot;https
      
    
    </summary>
    
      <category term="PHP" scheme="https://upholdjx.github.io/aitao/categories/PHP/"/>
    
    
      <category term="PHP" scheme="https://upholdjx.github.io/aitao/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>第一篇文章 localStorage 存储</title>
    <link href="https://upholdjx.github.io/aitao/2018/11/01/%E5%AD%98%E5%82%A8/"/>
    <id>https://upholdjx.github.io/aitao/2018/11/01/存储/</id>
    <published>2018-11-01T03:54:29.000Z</published>
    <updated>2018-11-02T03:45:55.496Z</updated>
    
    <content type="html"><![CDATA[<h2 id="多项表单-localStorage-存储"><a href="#多项表单-localStorage-存储" class="headerlink" title="多项表单 localStorage 存储"></a>多项表单 localStorage 存储</h2><h3 id="适用于多项输入如：radio-、text-、-number"><a href="#适用于多项输入如：radio-、text-、-number" class="headerlink" title="适用于多项输入如：radio 、text 、 number"></a>适用于多项输入如：radio 、text 、 number</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//页面初始加载判断缓存</span></span><br><span class="line">        <span class="keyword">var</span> lenth = localStorage.length;</span><br><span class="line">        <span class="keyword">if</span>(lenth !=<span class="string">''</span> &amp;&amp; lenth !=<span class="literal">undefined</span> &amp;&amp; lenth != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i= lenth - <span class="number">1</span> ; i &gt;<span class="number">0</span>; i--)&#123;</span><br><span class="line">                <span class="keyword">var</span> key =  localStorage.key(i);<span class="comment">//缓存的key</span></span><br><span class="line">                <span class="keyword">var</span> val = localStorage.getItem(key);<span class="comment">//缓存的值</span></span><br><span class="line">                <span class="keyword">var</span> name = key.substring(<span class="number">0</span>,key.length <span class="number">-2</span>);<span class="comment">//获得缓存位置的名称 </span></span><br><span class="line">                <span class="keyword">var</span> distinguish = key.substring(key.length <span class="number">-2</span>,key.length);</span><br><span class="line">    <span class="comment">//取的识别字符</span></span><br><span class="line">                <span class="keyword">if</span>(distinguish === <span class="string">'4a'</span>)&#123;</span><br><span class="line">                    $(<span class="string">"input[type='radio']"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                       <span class="keyword">if</span>($(<span class="keyword">this</span>)[<span class="number">0</span>].name === name &amp;&amp; $(<span class="keyword">this</span>)[<span class="number">0</span>].value === val)&#123;</span><br><span class="line">                         $(<span class="keyword">this</span>).attr(<span class="string">'checked'</span>, <span class="literal">true</span>);</span><br><span class="line">                       &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    $(<span class="string">"input[type='text']"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                       <span class="keyword">if</span>($(<span class="keyword">this</span>)[<span class="number">0</span>].name === name )&#123;</span><br><span class="line">                         $(<span class="keyword">this</span>).val(val)</span><br><span class="line">                       &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//监听内容变化</span></span><br><span class="line">    $(<span class="string">"input[type='text']"</span>).bind(<span class="string">"input propertychange"</span>,<span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">        localStorage.setItem(event.target.name+<span class="string">'4a'</span>, event.target.value);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $(<span class="string">"input[type='radio']"</span>).on(<span class="string">'input'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        localStorage.setItem(event.target.name+<span class="string">'4a'</span>, event.target.value);</span><br><span class="line">   <span class="comment">//设置缓存 名字+识别字符</span></span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;多项表单-localStorage-存储&quot;&gt;&lt;a href=&quot;#多项表单-localStorage-存储&quot; class=&quot;headerlink&quot; title=&quot;多项表单 localStorage 存储&quot;&gt;&lt;/a&gt;多项表单 localStorage 存储&lt;/h2&gt;&lt;
      
    
    </summary>
    
      <category term="JavaScript" scheme="https://upholdjx.github.io/aitao/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="https://upholdjx.github.io/aitao/tags/JavaScript/"/>
    
      <category term="Html" scheme="https://upholdjx.github.io/aitao/tags/Html/"/>
    
  </entry>
  
</feed>
