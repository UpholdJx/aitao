<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[layx初体验]]></title>
    <url>%2Faitao%2F2018%2F11%2F03%2Flayx%E5%88%9D%E4%BD%93%E9%AA%8C%2F</url>
    <content type="text"><![CDATA[Layx 新一代Web弹窗组件，纯原生Javascript实现，不依赖任何第三方框架git 地址： 初次使用第一步：引入 layx.css / layx.min.css 第二步：引入 layx.js / layx.min.js 第三步：打开一个窗口试试layx.html(‘str’,’字符串文本’,’Hello Layx!’); 消息提示1layx.msg('2419 iaitao',&#123;dialogIcon:'success'&#125;);//成功提示 dialogIcon: 提示图标相关如下success：成功图标warn：警告图标error：错误图标help: 帮助图标 窗口皮肤123456789101112layx.msg( '2419 iaitao', &#123; dialogIcon:'success', skin:'cloud' &#125;);//成功提示参数default // 默认有边框cloud // 白色turquoise //青绿色river //蓝色asphalt // 沥青色 提示窗口12layx.alert('操作提示','2419 i aitao！');//提示窗口layx.alert('操作提示','2419 i aitao！',null,&#123;dialogIcon:'success'&#125;);//提示窗口 添加提示图标 打开网页1layx.iframe('localsite','网页打开测试','https://www.baidu.com'); 添加提示方向 ： top 、right、bottom、left1234&lt;a href="#" id="tip-right"&gt;测试&lt;/a&gt;&lt;script type="text/javascript"&gt; layx.tip('只是测试哦.',document.getElementById('tip-right'),'right');&lt;/script&gt; 询问窗口123456789101112131415161718192021222324252627282930layx.confirm('选择','你会选择爱情而放弃事业吗？',function(id)&#123; layx.msg('你的选择是正确的',&#123;dialogIcon:'success'&#125;);//成功提示 layx.destroy(id);&#125;);带图标layx.confirm('选择','你会选择爱情而放弃事业吗？',function(id)&#123; layx.msg('你的选择是正确的',&#123;dialogIcon:'success'&#125;);//成功提示 layx.destroy(id);&#125;,&#123;dialogIcon:'success'&#125;);双向选择layx.confirm('选择','你会选择爱情而放弃事业吗？',null,&#123; buttons:[ &#123; label:'是的', callback:function(id, button, event)&#123; layx.msg('你的选择是正确的,爱情价更高！',&#123;dialogIcon:'success'&#125;);//成功提示 layx.destroy(id); &#125; &#125;, &#123; label:'不会', callback:function(id, button, event)&#123; layx.msg('你的选择是正确的,爱情不能盲目！',&#123;dialogIcon:'success'&#125;);//成功提示 layx.destroy(id); &#125; &#125; ]&#125;,&#123;dialogIcon:'success'&#125;); 加载等待1234567891011layx.load('loadId','数据正在加载中，请稍后');// 5 秒后自动关闭setTimeout(function()&#123; layx.destroy('loadId');&#125;,5000);倒计时窗口layx.iframe('settimeout','打开一个倒计时关闭窗口','https://www.baidu.com',&#123; autodestroy:5000&#125;); 打开窗口和窗口组初始化 窗口宽度：800 高度：600 minWidth：200 minHeight：200，宽度高度支持百分比显示，窗口位置 默认正中间 窗口组12345678910111213141516171819202122232425262728293031layx.group('group',[ &#123; id:'group1', title:'文本窗口', content:'Layx 新一代Web弹窗组件.', bgColor:'#ccc', &#125;, &#123; id:'group2', title:'网页窗口', type:'url', url:'./iframe.html' &#125;, &#123; id:'taobao', title:'百度官网', type:'url', url:'https://www.baidu.com' &#125;],0,&#123; width:600, skin:'cloud', mergeTitle:false, title:'你好呀，我是标题~'&#125;));0 表示默认显示第一个窗口 下标从0开始bgColor 表示页面背景颜色如果需要显示标题就添加下面两个参数，不需要就不用加 mergeTitle:false, title:'你好呀，我是标题~' 遮罩窗口123456789101112131415layx.iframe('shadow','打开一个遮罩、阻隔窗口，点击窗口外试试','http://www.baidu.com',&#123; shadable:true&#125;);shadable 透明度 取值0~1 浮点值 透明度依次递减点击空白地方关闭layx.iframe('shadow-click','点击阻隔空白地方关闭窗口','http://www.baidu.com',&#123; shadable:0.2, control:true, border:false, shadow:false, shadeDestroy:true // 点击空白地方关闭&#125;);control 设置 false 将不显示控制标题栏，同时窗口拖动功能失效，需手动调用关闭方法关闭窗口。border:false 表示无边框 自定义样式123456789101112131415161718layx.iframe('radiu-style','自定义外观，比如圆角','./iframe.html',&#123; style:layx.multiLine(function()&#123;/* icon:false, #layx-radiu-style&#123; border-radius:4px; -webkit-border-radius:4px; -moz-border-radius:4px; -ms-border-radius:4px; &#125; #layx-radiu-style .layx-window-icon&#123; color:#f00; &#125;*/&#125;)&#125;);icon 打开窗口的图标，可以去掉也可以自定义例如：icon:'&lt;img src="http://img.zcool.cn/community/019c2958a2b760a801219c77a9d27f.jpg" style="height:22px;display:block;" /&gt;', 关闭窗口12parent.layx.destroy(id); // 方法一（推荐）top.layx.destroy(id); // 方法二]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Layx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[thinkphp标签循环嵌套]]></title>
    <url>%2Faitao%2F2018%2F11%2F02%2Fthinkphp%E6%A0%87%E7%AD%BE%E5%BE%AA%E7%8E%AF%E5%B5%8C%E5%A5%97%2F</url>
    <content type="text"><![CDATA[thinkphp volist 多重循环嵌套key]]></content>
  </entry>
  <entry>
    <title><![CDATA[Jquery对input的一些操作]]></title>
    <url>%2Faitao%2F2018%2F11%2F02%2FJquery%E5%AF%B9input%E7%9A%84%E4%B8%80%E4%BA%9B%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[场景：对于选中，选择的一些操作，比如：勾选导出，获得全部选中的值等等 获得全部选中的值html 部分代码：1234567&lt;div class="checkbox"&gt; &lt;label&gt; &lt;input type="checkbox" name="ids[]" value="1"&gt; &lt;span class="text"&gt;&lt;/span&gt; &lt;/label&gt; ......&lt;/div&gt; javascript 代码：1234567891011121314function getAllValue()&#123; var ids = new Array(); i = 0; $("input[name^='ids']:checked").each(function()&#123;//找到所有被选中的值 var val = $(this).val(); ids[i] = val; i++; &#125;); var len = ids.length; if(len === 0)&#123; return false; &#125; return ids;&#125; 勾选多项进行操作$.getJSON 简介：JSON（JavaScript Object Notation）即JavaScript对象表示法，是一种轻量级的数据交换格式。它非常便于编程人员对数据的处理，也便于机器对数据的解析和生成，应用非常广泛。json文件可以保存为“test.json”这样的文件，json数据的一般格式如下（“{ }”中的为对象，“[ ]”中的为数组)123456789101112131415function operate()&#123; var url = $(this).attr('url');//获得操作使用的url地址 var ids = getAllValue();//调用上列使用的方法 if(!ids)&#123; return false; &#125; $.getJSON(url,&#123;'t':new Date().getTime()&#125;,function(d)&#123; //发送get请求 返回结构比如：['status'=&gt;1|0,'data'=&gt;[],'msg'=&gt;'ok'] if(d.status&gt;0)&#123; alert(d.msg);//成功信息 &#125;else&#123; alert(d.msg);//失败信息 &#125; &#125;&#125; 反选操作html 示例12345678910111213&lt;div&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt; &lt;label&gt; &lt;input type="checkbox" name="ids[]" value="1"&gt; &lt;span class="text"&gt;&lt;/span&gt; &lt;/label&gt; &lt;/td&gt; &lt;/tr&gt; ...... &lt;/table&gt;&lt;/div&gt; JavaScript 示例1234567891011121314$('.reverse-select').on('click',function()&#123;//反选 class="reverse-select" var is_check = $(this).prop('checked'); $(this).parents('table').find("input[name^='ids']").each(function()&#123; //查找节点遍历 也可使用 $("table input[name^='ids']").each(); var has_check = $(this).prop('checked'); if(is_check &amp;&amp; !has_check)&#123; $(this).prop('checked',true); &#125;else&#123; if(has_check &amp;&amp; !is_check)&#123; $(this).prop('checked',false); &#125; &#125; &#125;&#125;)]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Jquery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP常用字符串总结]]></title>
    <url>%2Faitao%2F2018%2F11%2F02%2FPHP%E5%B8%B8%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[PHP 是 “PHP Hypertext Preprocessor” 的首字母缩略词PHP 是一种被广泛使用的开源脚本语言PHP 脚本在服务器上执行PHP 没有成本，可供免费下载和使用 PHP 相关主流框架：thinkphp5.0 看云文档 laravel 中文社区 Phalcon Symfony 排列不分先后。 本文对框架不做讨论 常用字符串函数及使用字符串大小写转换12345$str = 'abc';$low_str = strtolower($str);echo '转换为小写'+$low_str;$uper_str = strtoupper($str);echo '转换为大写'+$uper_str; 替换字符串中的字串mixed substr_replace ( mixed $string , mixed $replacement , mixed $start [, mixed $length ] )substr_replace()在字符串 string 的副本中将由 start 和可选的 length 参数限定的子字符串使用 replacement 进行替换。注： 如果 start 为正数，替换将从 string 的 start 位置开始。 如果 start 为负数，替换将从 string 的倒数第 start 个位置开始。 1234实列：$str = 'abc';$new_str = substr_replace($str,'d',0,$strlen($str));//strlen() 函数计算字符串的长度echo '新的字串的值'+$new_str;//abcd More info: php 文档 字符串与数组之间的相互转化array explode ( string $delimiter , string $string [, int $limit ] )此函数返回由字符串组成的数组，每个元素都是 string 的一个子串，它们被字符串 delimiter 作为边界点分割出来。string implode ( string $glue , array $pieces ) //$glue 默认为空字符串string implode ( array $pieces )implode() 可以接收两种参数顺序，但是 explode() 不行。 12345678910111213实例：$str = 'a,b,c,d';//逗号为分隔字符 相当于 $delimiter ='';$arr = explode(',',$str);dump($arr);得到：array(4) &#123; [0] =&gt; string(1) "a" [1] =&gt; string(1) "b" [2] =&gt; string(1) "c" [3] =&gt; string(1) "d"&#125;$new_str = implode($arr);echo $new_str;//abcd]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP 常用字符串的比较]]></title>
    <url>%2Faitao%2F2018%2F11%2F01%2Fhello-world%2F</url>
    <content type="text"><![CDATA[PHP 是 “PHP Hypertext Preprocessor” 的首字母缩略词PHP 是一种被广泛使用的开源脚本语言PHP 脚本在服务器上执行PHP 没有成本，可供免费下载和使用 PHP 相关主流框架：thinkphp5.0 看云文档 laravel 中文社区 Phalcon Symfony 排列不分先后。 本文对框架不做讨论 常用字符串函数及使用字符串大小写转换12345$str = 'abc';$low_str = strtolower($str);echo '转换为小写'+$low_str;$uper_str = strtoupper($str);echo '转换为大写'+$uper_str; 替换字符串中的字串mixed substr_replace ( mixed $string , mixed $replacement , mixed $start [, mixed $length ] )substr_replace()在字符串 string 的副本中将由 start 和可选的 length 参数限定的子字符串使用 replacement 进行替换。注： 如果 start 为正数，替换将从 string 的 start 位置开始。 如果 start 为负数，替换将从 string 的倒数第 start 个位置开始。 1234实列：$str = 'abc';$new_str = substr_replace($str,'d',0,$strlen($str));//strlen() 函数计算字符串的长度echo '新的字串的值'+$new_str;//abcd More info: php 文档 字符串与数组之间的相互转化array explode ( string $delimiter , string $string [, int $limit ] )此函数返回由字符串组成的数组，每个元素都是 string 的一个子串，它们被字符串 delimiter 作为边界点分割出来。string implode ( string $glue , array $pieces ) //$glue 默认为空字符串string implode ( array $pieces )implode() 可以接收两种参数顺序，但是 explode() 不行。 12345678910111213实例：$str = 'a,b,c,d';//逗号为分隔字符 相当于 $delimiter ='';$arr = explode(',',$str);dump($arr);得到：array(4) &#123; [0] =&gt; string(1) "a" [1] =&gt; string(1) "b" [2] =&gt; string(1) "c" [3] =&gt; string(1) "d"&#125;$new_str = implode($arr);echo $new_str;//abcd]]></content>
      <categories>
        <category>PHP</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一篇文章 localStorage 存储]]></title>
    <url>%2Faitao%2F2018%2F11%2F01%2F%E5%AD%98%E5%82%A8%2F</url>
    <content type="text"><![CDATA[多项表单 localStorage 存储适用于多项输入如：radio 、text 、 number12345678910111213141516171819202122232425262728293031323334$(function()&#123; //页面初始加载判断缓存 var lenth = localStorage.length; if(lenth !='' &amp;&amp; lenth !=undefined &amp;&amp; lenth != null) &#123; for(var i= lenth - 1 ; i &gt;0; i--)&#123; var key = localStorage.key(i);//缓存的key var val = localStorage.getItem(key);//缓存的值 var name = key.substring(0,key.length -2);//获得缓存位置的名称 var distinguish = key.substring(key.length -2,key.length); //取的识别字符 if(distinguish === '4a')&#123; $("input[type='radio']").each(function () &#123; if($(this)[0].name === name &amp;&amp; $(this)[0].value === val)&#123; $(this).attr('checked', true); &#125; &#125;); $("input[type='text']").each(function () &#123; if($(this)[0].name === name )&#123; $(this).val(val) &#125; &#125;); &#125; &#125; &#125; &#125;) //监听内容变化 $("input[type='text']").bind("input propertychange",function (event) &#123; localStorage.setItem(event.target.name+'4a', event.target.value); &#125;); $("input[type='radio']").on('input', function(event) &#123; localStorage.setItem(event.target.name+'4a', event.target.value); //设置缓存 名字+识别字符 &#125;);]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>Html</tag>
      </tags>
  </entry>
</search>
